name: Backup Action Test

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v1

    - name: Backup MySQL DB
      uses: ./
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        deploy_key: ${{ secrets.DEPLOY_KEY }}
        type: db
        db_type: mysql
        db_user: ${{ secrets.MYSQL_USER }}
        db_pass: ${{ secrets.MYSQL_PASS }}
        db_port: 3306
        db_name: world

    - name: Backup Mongo DB
      uses: ./
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }} # Defaults to root
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        deploy_key: ${{ secrets.DEPLOY_KEY }}
        type: db
        db_type: mongo
        db_user: webgeeksAdmin
        db_pass: DD9e3H9Gp?X#nZNA
        db_port: 27017
        # auth_db: ${{ secrets.authenticationDatabase }} # Required for Mongo DB v4.4.0 - Defaults to admin
        db_name: world

    # - name: executing remote ssh commands using ssh key
    #   uses: ./
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     key: ${{ secrets.KEY }}
    #     port: ${{ secrets.PORT }}
    #     script: whoami

    # - name: multiple command
    #   uses: ./
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     password: ${{ secrets.PASSWORD }}
    #     port: ${{ secrets.PORT }}
    #     script: |
    #       whoami
    #       ls -al

    # - name: stop script if command error
    #   uses: ./
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     key: ${{ secrets.KEY }}
    #     port: ${{ secrets.PORT }}
    #     script_stop: true
    #     script: |
    #       mkdir abc/def
    #       ls -al

    # - name: pass environment
    #   uses: ./
    #   env:
    #     FOO: "BAR"
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     password: ${{ secrets.PASSWORD }}
    #     port: ${{ secrets.PORT }}
    #     envs: FOO
    #     script: |
    #       echo "I am $FOO, thanks"
    #       echo "I am $BAR, thanks"

    # - name: pass multiple environment
    #   uses: ./
    #   env:
    #     FOO: "BAR"
    #     BAR: "FOO"
    #     SHA: ${{ github.sha }}
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     password: ${{ secrets.PASSWORD }}
    #     port: ${{ secrets.PORT }}
    #     envs: FOO,BAR,SHA
    #     script: |
    #       echo "I am $FOO, thanks"
    #       echo "I am $BAR, thanks"
    #       echo "sha: $SHA"

    # - name: ssh key passphrase
    #   uses: ./
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     key: ${{ secrets.SSH2 }}
    #     port: ${{ secrets.PORT }}
    #     passphrase: ${{ secrets.PASSPHRASE }}
    #     script: |
    #       whoami
    #       ls -al
    
    # - name: use insecure cipher
    #   uses: ./
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     password: ${{ secrets.PASSWORD }}
    #     port: ${{ secrets.PORT }}
    #     script: |
    #         ls \
    #           -lah
    #     use_insecure_cipher: true

    # https://github.com/appleboy/ssh-action/issues/75#issuecomment-668314271
    # - name: Multiline SSH commands interpreted as single lines
    #   uses: ./
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     password: ${{ secrets.PASSWORD }}
    #     port: ${{ secrets.PORT }}
    #     script_stop: true
    #     script: |
    #         ls \
    #           -lah
    #     use_insecure_cipher: true
